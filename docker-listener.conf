#!upstart
description "docker-listener"
author "Anandkumar"

env NPM_BIN=/usr/local/bin/npm
env APP_DIR=/opt/runnable/docker-listener
env LOG_FILE=/var/log/docker-listener.log
env NODE_ENV=production-beta

env LOGGLY_TOKEN=f673760d-e0b3-4a93-a15e-2862ea074f91
env RABBITMQ_USERNAME=o2mdLh9N9Ke2GzhoK8xsruYPhIQFN7iEL44dQJoq7OM
env REDIS_IPADDRESS=10.20.1.56
env DOCKER_CERT_PATH=/opt/ssl/docker
env REDIS_PORT=6379
env RABBITMQ_PASSWORD=wKK7g7NWKpQXEeSzyWB7mIpxZIL8H2mDSf3Q6czR3Vk
env RABBITMQ_PORT=54321
env RABBITMQ_HOSTNAME=10.20.1.60

env HOST_TAGS_FILE=/opt/runnable/host_tags

start on (local-filesystems and net-device-up IFACE=eth0)
stop on shutdown

script
  touch $LOG_FILE
  chdir $APP_DIR
  echo $$ > /var/run/docker-listener.pid
  HOST_TAGS=`cat $HOST_TAGS_FILE` exec $NPM_BIN start >> $LOG_FILE 2>&1
end script

pre-start script
  # Date format same as (new Date()).toISOString() for consistency
  echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting" >> $LOG_FILE
end script

pre-stop script
  rm /var/run/docker-listener.pid
  echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping" >> $LOG_FILE
end script

post-start script
  echo "===== App restarted =====" >> $LOG_FILE
end script

respawn
respawn limit 5 1     # give up restart after 5 respawns in 1 seconds
